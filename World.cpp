#include "World.h"
#include "Object.h"
#include "Character.h"
#include "CharacterAction.h"
#include "CharacterController.h"
#include "Camera.h"
#include "Animation.h"
#include "Sound.h"
#include "CsvReader.h"
#include "Control.h"
#include "Define.h"
#include "Item.h"
#include "Text.h"
#include "Brain.h"
#include "ControllerRecorder.h"
#include "CharacterLoader.h"
#include "ObjectLoader.h"
#include "Game.h"
#include "GraphHandle.h"
#include "DxLib.h"
#include <algorithm>


using namespace std;


/*
* 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｶ�ｷ�ｽ�ｿ�ｽ�ｫ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ
*/
PlayerChanger::PlayerChanger(std::vector<CharacterController*> controllers_p, const Character* player_p) {
	for (unsigned int i = 0; i < controllers_p.size(); i++) {
		if (controllers_p[i]->getAction()->getCharacter()->getId() == player_p->getId()) {
			m_prevBrainName = controllers_p[i]->getBrain()->getBrainName();
			if (m_prevBrainName == "KeyboardBrain") {
				m_prevBrainName = "FollowNormalAI";
			}
			break;
		}
	}
}

/*
* controllers_p鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣謳ｾ�ｽ�ｱlayer_p鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞滂ｽｲ�ｽ�ｽ�ｽ�ｿ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ鬩包ｽｶ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｶ�ｷ�ｽ�ｿ�ｽ�ｫ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬮ｫ�ｴ遶擾ｽｫ�ｽ�ｵ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ
* 鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｯ�ｽ�ｷ髣�ｽ�･髴托ｽｴ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯID鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ隰���ｽ�ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮｣蛹�ｽｽ�ｵ
* 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻplayer鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮBrain鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｦontrollers_p鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮBrain鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ貅ｷ譯�ｿｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
*/
const Character* PlayerChanger::play(SoundPlayer* soundPlayer_p, std::vector<CharacterController*> controllers_p, const Character* player_p) {
	// E鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ�ｽ�ｴ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｹ�ｽ�ｺ�ｽ�ｽ�ｽ�ｾ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｴ鬩幢ｿｽ�ｽ�ｲ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｰ隴ｴ�ｧ雎主､ｲ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｴ鬩幢ｿｽ�ｽ�ｲ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ驛｢�ｧ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ
	if (controlE() != 1) {
		return nullptr;
	}

	const Character* minCharacter = nullptr;
	const Character* nextPlayer = nullptr;
	for (unsigned int i = 0; i < controllers_p.size(); i++) {
		const Character* target = controllers_p[i]->getAction()->getCharacter();
		// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｻ鬮ｫ�ｶ隰夲ｽｵ�ｽ�ｽ�ｽ�ｭ鬮ｫ�ｨ陋幢ｿｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬮｣蛹�ｽｽ�ｵ髫ｴ謫ｾ�ｽ�ｴ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢
		int groupId = target->getGroupId();
		// ID
		int id = target->getId();
		if (id == player_p->getId()) { continue; }
		// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡
		if (groupId == player_p->getGroupId()) {
			// ID鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ�ｽ�ｴ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｲ�ｽ�､髯ｷ�ｻ�ｽ�ｵ髮朱ｯ会ｽｽ�｣鬮｣蛹�ｽｽ�ｳ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ
			if (minCharacter == nullptr || id < minCharacter->getId()) {
				minCharacter = target;
			}
			// ID鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ貊灘擠�ｽ�ｯ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｹ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ
			if (id > player_p->getId()) {
				if (nextPlayer == nullptr || id < nextPlayer->getId()) {
					nextPlayer = target;
				}
			}
		}
	}
	// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ�ｽ�ｴ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｲ�ｽ�､髯ｷ�･隰ｫ�ｾ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽD鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｯ�ｮ�ｽ�ｦ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ髫ｶ謐ｺ諷｣�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ蜈ｷ�ｿ�ｽ�ｽ�ｽ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽullptr鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧID鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ�ｽ�ｴ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｲ�ｽ�､髯ｷ�･隰ｫ�ｾ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ鬮｣蛹�ｽｽ�ｳ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ譎｢�ｽ�ｶ髫ｴ謫ｾ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｶ
	if (nextPlayer == nullptr) {
		nextPlayer = minCharacter;
	}
	return nextPlayer;
}


// vector鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ蜈ｷ�ｿ�ｽ�ｽ�ｽ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void deleteAllObject(vector<Object*>& objects) {
	for (int i = (int)objects.size() - 1; i >= 0; i--) {
		delete objects[i];
		objects.pop_back();
	}
}

// vector鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｸeleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰碁宦�ｯ�ｰrue鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void deleteObject(vector<Object*>& objects) {
	for (unsigned int i = 0; i < objects.size(); i++) {
		// deleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
		if (objects[i]->getDeleteFlag()) {
			delete objects[i];
			// 鬯ｮ�ｫ�ｽ�ｴ髯晢ｽｷ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬩搾ｿｽ遘�ｿｽ�ｽ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｩ鬮ｮ蜈ｷ�ｿ�ｽ遶乗ｩｸ�ｿ�ｽ�ｽ�ｼ
			objects[i] = objects.back();
			objects.pop_back();
			i--;
		}
	}
}

// vector鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ蜈ｷ�ｿ�ｽ�ｽ�ｽ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶企ｷｹ�ｫ�ｴ陜捺ｻ楢乢�ｽ�ｽ�ｽ�ｰ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
void actionObject(vector<Object*>& objects) {
	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ髣鯉ｽｨ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｫ鬩搾ｽｵ�ｽ�ｺ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ (鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩包ｽｶ鬮ｮ�ｽ�ｽ�ｮ陞｢�ｽ遶企ｷｹ�ｫ�ｴ陜捺ｺｷ郢ｭ�ｽ�ｽ�ｽ�ｳ)
	for (unsigned int i = 0; i < objects.size(); i++) {
		// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
		objects[i]->action();
		// deleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
		if (objects[i]->getDeleteFlag()) {
			delete objects[i];
			// 鬯ｮ�ｫ�ｽ�ｴ髯晢ｽｷ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬩搾ｿｽ遘�ｿｽ�ｽ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｩ鬮ｮ蜈ｷ�ｿ�ｽ遶乗ｩｸ�ｿ�ｽ�ｽ�ｼ
			objects[i] = objects.back();
			objects.pop_back();
			i--;
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｮ�ｽ�ｮ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｯ�ｽ�ｨ�ｽ�ｽ�ｽ�ｾ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｮ�ｯ陷茨ｽｷ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
void penetrationCharacterAndObject(CharacterController* controller, vector<Object*> objects) {
	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ髣鯉ｽｨ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｫ鬩搾ｽｵ�ｽ�ｺ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ (鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩包ｽｶ鬮ｮ�ｽ�ｽ�ｮ陞｢�ｽ遶企ｷｹ�ｫ�ｴ陜捺ｺｷ郢ｭ�ｽ�ｽ�ｽ�ｳ)
	for (unsigned int i = 0; i < objects.size(); i++) {
		// 鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｼ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｯ�ｽ�ｽ�ｽ�ｦ鬮ｯ貅ｷ萓幢ｿｽ�ｨ�ｽ�ｯ鬯ｲ蛛�ｽｽ�ｬ
		objects[i]->penetration(controller);
	}
}


/*
* 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ闕ｳ�ｻ�ｽ�ｸ�ｽ�ｷ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ
*/
World::World() {
	m_duplicationFlag = false;

	m_brightValue = 255;

	m_resetBgmFlag = false;

	m_blindFlag = false;

	// 髣費ｽｨ陞溷･�ｽｽ�ｩ�ｽ�ｱ驛｢�ｧ�ｽ�､驛｢譎冗函�趣ｽｦ驛｢
	m_conversation_p = nullptr;
	m_objectConversation = nullptr;

	// 鬯ｩ蟷｢�ｽ�｢鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ蟇よ��ｽ�ｾ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
	m_movie_p = nullptr;

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髯ｷ�･�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ驛｢�ｧ隰�∞�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ
	m_skillFlag = false;

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ陋ｹ�ｺ�ｽ�ｺ�ｽ�ｷ鬮ｫ�ｱ�ｽ�ｿ鬯ｩ閧ｴ蠕暦ｿｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｴ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｮ�ｯ�ｽ�ｷ髯ｷ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｸ髫ｶ蜴�ｽｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｱ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
	getGameEx(m_exX, m_exY);
	m_cameraMaxEx *= m_exX;
	m_cameraMinEx *= m_exX;

	m_areaLock = false;

	m_date = 0;

	m_bossDeadEffectCnt = 0;

	m_money = 0;

}

/*
* 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ
*/
World::World(int fromAreaNum, int toAreaNum, SoundPlayer* soundPlayer) :
	World()
{

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｵ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ
	m_soundPlayer_p = soundPlayer;

	// 鬯ｮ�｣陋ｹ�ｽ�ｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�･鬮ｫ�ｲ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ
	m_areaNum = toAreaNum;
	m_nextAreaNum = m_areaNum;

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜿･�ｹ�｢�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢
	const AreaReader data(fromAreaNum, toAreaNum, m_soundPlayer_p);
	m_camera = data.getCamera();
	m_focusId = data.getFocusId();
	m_playerId = data.getPlayerId();
	m_soundPlayer_p->setBGM(data.getBgm());
	m_characters = data.getCharacters();
	m_characterControllers = data.getCharacterControllers();
	m_stageObjects = data.getObjects();
	m_doorObjects = data.getDoorObjects();
	data.getBackGround(m_backGroundGraph, m_backGroundColor);

	// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜿･�ｹ�｢�ｽ�ｽ�ｽ�ｵ鬩搾ｽｵ�ｽ�ｺ髫ｴ諠ｹ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_playerId == m_characters[i]->getId()) {
			m_player_p = m_characters[i];
			break;
		}
	}

	m_playerChanger = new PlayerChanger(m_characterControllers, m_player_p);

	// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬮｣豈費ｽｼ螟ｲ�ｽ�ｽ�ｽ�｣鬩包ｽｶ陜灘ｼｱﾎ馴坿�ｽ�ｺ鬮｣豈費ｽｼ螟ｲ�ｽ�ｽ�ｽ�｣�ｽ�ｽ郢ｧ謇假ｽｽ�ｽ�ｽ�ｰ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ譎｢�ｽ�ｶ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		m_characterControllers[i]->setPlayerDirection(m_player_p, true);
	}

	m_camera->setEx(m_cameraMaxEx);

	m_characterDeadGraph = new GraphHandles("picture/effect/dead", 5, 1.0, 0, true);
	m_characterDamageGraph = new GraphHandles("picture/effect/damage", 1, 0.2, 0, true);
	m_bombGraph = new GraphHandles("picture/effect/bomb", 9, 1.0, 0, true);
	m_characterDeadSound = LoadSoundMem("sound/battle/dead.wav");
	m_bombSound = LoadSoundMem("sound/battle/bomb.wav");
	m_doorSound = LoadSoundMem("sound/battle/door.wav");
	m_cameraInSound = LoadSoundMem("sound/battle/cameraIn.mp3");
	m_cameraOutSound = LoadSoundMem("sound/battle/cameraOut.mp3");

}

World::World(const World* original) :
	World()
{
	m_duplicationFlag = true;

	// 郢ｧ�ｨ郢晢ｽｪ郢ｧ�｢郢ｧ蛛ｵ縺慕ｹ晄鱒�ｽ (郢晏干ﾎ懃ｹ晄ｺ倥Θ郢ｧ�｣郢晞摩譴)
	m_areaNum = original->getAreaNum();
	m_focusId = original->getFocusId();
	m_playerId = original->getPlayerId();
	m_date = original->getDate();
	m_money = original->getMoney();

	// 郢ｧ�ｨ郢晢ｽｪ郢ｧ�｢郢ｧ蛛ｵ縺慕ｹ晄鱒�ｽ (郢ｧ�ｳ郢晄鱒�ｽ陷茨ｿｽ竊定怦�ｱ隴帛ｳｨ笘�ｹｧ荵晢ｽらｸｺ�ｮ)
	m_soundPlayer_p = original->getSoundPlayer();
	m_characterDeadGraph = original->getCharacterDeadGraph();
	m_characterDamageGraph = original->getCharacterDamageGraph();
	m_bombGraph = original->getBombGraph();
	m_characterDeadSound = original->getCharacterDeadSound();
	m_bombSound = original->getBombSound();
	m_doorSound = original->getDoorSound();
	m_backGroundGraph = original->getBackGroundGraph();
	m_backGroundColor = original->getBackGroundColor();
	m_bossDeadEffectCnt = original->getBossDeadEffextCnt();

	// 隴�ｽｰ髫穂ｸ茨ｽｽ諛茨ｿｽ邵ｺ蜷ｶ�狗ｹｧ繧�ｿｽ (郢晄亢縺�ｹ晢ｽｳ郢ｧ�ｿ邵ｺ謔滂ｽ､蟲ｨ�冗ｹｧ)
	m_camera = new Camera(original->getCamera());
	for (unsigned int i = 0; i < original->getCharacters().size(); i++) {
		Character* copy;
		copy = original->getCharacters()[i]->createCopy();
		m_characters.push_back(copy);
		if (copy->getId() == m_playerId) { m_player_p = copy; }
	}
	m_playerChanger = new PlayerChanger(m_characterControllers, m_player_p);
	for (unsigned int i = 0; i < original->getCharacterControllers().size(); i++) {
		CharacterController* copy;
		// Brain鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨAction鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｱ隰夲ｽｵ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫCharacter鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
		copy = original->getCharacterControllers()[i]->createCopy(m_characters, m_camera);
		m_characterControllers.push_back(copy);
	}
	for (unsigned int i = 0; i < original->getStageObjects().size(); i++) {
		Object* copy;
		copy = original->getStageObjects()[i]->createCopy();
		m_stageObjects.push_back(copy);
	}
	for (unsigned int i = 0; i < original->getDoorObjects().size(); i++) {
		Object* copy;
		copy = original->getDoorObjects()[i]->createCopy();
		m_doorObjects.push_back(copy);
	}
	for (unsigned int i = 0; i < original->getAttackObjects().size(); i++) {
		Object* copy;
		copy = original->getAttackObjects()[i]->createCopy();
		m_attackObjects.push_back(copy);
	}
	for (unsigned int i = 0; i < original->getAnimations().size(); i++) {
		Animation* copy;
		copy = original->getAnimations()[i]->createCopy();
		m_animations.push_back(copy);
	}
	for (unsigned int i = 0; i < original->getItemVector().size(); i++) {
		Item* copy;
		copy = original->getItemVector()[i]->createCopy();
		m_itemVector.push_back(copy);
	}

	// 陋ｻ譎�ｄ髫ｪ�ｭ陞ｳ
	m_camera->setEx(m_cameraMaxEx);

}

World::~World() {
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
	delete m_camera;

	// 鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	deleteAllObject(m_stageObjects);
	deleteAllObject(m_attackObjects);
	deleteAllObject(m_doorObjects);

	// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩搾ｽｵ�ｽ�ｺ鬯ｯ蛟ｩ�ｲ�ｻ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ髫ｴ竏ｫ�ｵ�ｶ陷�ｽｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�･鬮ｴ髮｣�ｽ�､髫ｴ蟷｢�ｽ�ｱ�ｽ�ｽ�ｽ�ｫ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､
	for (unsigned i = 0; i < m_animations.size(); i++) {
		delete m_animations[i];
	}

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ闕ｳ�ｻ�ｽ�ｮ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ
	for (unsigned i = 0; i < m_itemVector.size(); i++) {
		delete m_itemVector[i];
	}

	// 鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		delete m_characterControllers[i];
	}

	// 鬯ｮ�ｯ�ｽ�ｷ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		delete m_characters[i];
	}

	delete m_playerChanger;

	// 鬯ｯ�ｮ�ｽ�｢�ｽ�ｽ�ｽ�ｭ鬮ｫ�ｴ�ｽ�ｴ�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｹ
	if (!m_duplicationFlag) {
		DeleteGraph(m_backGroundGraph);
		delete m_characterDeadGraph;
		delete m_characterDamageGraph;
		delete m_bombGraph;
		DeleteSoundMem(m_characterDeadSound);
		DeleteSoundMem(m_bombSound);
		DeleteSoundMem(m_doorSound);
		DeleteSoundMem(m_cameraInSound);
		DeleteSoundMem(m_cameraOutSound);
	}

	if (m_objectConversation != nullptr) {
		delete m_objectConversation;
	}
}

// Drawer鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｾharacterAction鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮvector鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬮ｫ�ｴ遶擾ｽｫ�ｽ�ｵ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
vector<const CharacterAction*> World::getActions() const {
	vector<const CharacterAction*> actions;
	size_t size = m_characterControllers.size();
	for (unsigned int i = 0; i < size; i++) {
		// HPが０かつDeadGraphがないなら表示しない
		if (m_characterControllers[i]->getAction()->getCharacter()->getHp() > 0 || m_characterControllers[i]->getAction()->getCharacter()->haveDeadGraph()) {
			actions.push_back(m_characterControllers[i]->getAction());
		}
		else if (m_characterControllers[i]->getAction()->getCharacter()->getBossFlag() && m_bossDeadEffectCnt > 0) {
			actions.push_back(m_characterControllers[i]->getAction());
		}
	}
	return actions;
}

// Drawer鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ陞滂ｽｲ�ｽ�ｽ�ｽ�ｹbject鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮvector鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬮ｫ�ｴ遶擾ｽｫ�ｽ�ｵ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
vector<const Object*> World::getFrontObjects() const {

	vector<const Object*> allObjects;
	allObjects.insert(allObjects.end(), m_attackObjects.begin(), m_attackObjects.end());

	return allObjects;
}

// Drawer鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ鬯ｯ髯ｷ閧ｴ�ｻ繧托ｽｽ�ｽ�ｽ�ｾ鬯ｲ�ｽ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｽ髯ｷ�･�ｽ�ｲ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｫ�ｽ�ｰ鬮ｯ�ｷ髫ｲ�､隲幄肩�ｿ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬮ｴ�ｽ�ｽject鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮvector鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬮ｫ�ｴ遶擾ｽｫ�ｽ�ｵ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
vector<const Object*> World::getBackObjects() const {

	vector<const Object*> allObjects;
	allObjects.insert(allObjects.end(), m_stageObjects.begin(), m_stageObjects.end());
	allObjects.insert(allObjects.end(), m_doorObjects.begin(), m_doorObjects.end());

	return allObjects;
}

// Drawer鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ�ｽ�ｩ�ｽ�ｽ�ｽ�ｯimation鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮvector鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬮ｫ�ｴ遶擾ｽｫ�ｽ�ｵ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
vector<const Animation*> World::getConstAnimations() const {

	vector<const Animation*> allAnimations;

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ髫ｴ竏ｫ�ｵ�ｶ陷�ｽｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢
	allAnimations.insert(allAnimations.end(), m_animations.begin(), m_animations.end());

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
	for (unsigned int i = 0; i < m_itemVector.size(); i++) {
		if (!m_itemVector[i]->getDeleteFlag()) {
			// 消滅しそうなら点滅
			if (m_itemVector[i]->getCnt() < m_itemVector[i]->ERASE_CNT * 2 / 3 || m_itemVector[i]->getCnt() / 3 % 2 == 0) {
				allAnimations.push_back(m_itemVector[i]->getAnimation());
			}
		}
	}

	return allAnimations;
}

// 鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬮ｫ�ｶ隴幢ｽｱ�ｽ�｡隰夲ｽｫ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｫ�ｽ�ｶ鬮ｫ�ｲ陝ｷ�｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢
Character* World::getCharacterWithName(string characterName) const {
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_characters[i]->getName() == characterName) {
			return m_characters[i];
		}
	}
	return nullptr;
}

// 鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬮ｫ�ｶ隴幢ｽｱ�ｽ�｡隰夲ｽｫ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｫ�ｽ�ｶ鬮ｫ�ｲ陝ｷ�｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢
CharacterController* World::getControllerWithName(string characterName) const {
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == characterName) {
			return m_characterControllers[i];
		}
	}
	return nullptr;
}

// ID鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｫ�ｽ�ｶ鬮ｫ�ｲ陝ｷ�｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢
Character* World::getCharacterWithId(int id) const {
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_characters[i]->getId() == id) {
			return m_characters[i];
		}
	}
	return nullptr;
}

// ID鬯ｮ�ｫ�ｽ�ｰ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｲ鬯ｩ蠅楢ｳ彗in鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ
void World::setBrainWithId(int id, Brain* brain) {
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getId() == id) {
			m_characterControllers[i]->setBrain(brain);
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ鬩墓得�ｽ�ｩ髫ｲ�ｱ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ
void World::addCharacter(CharacterLoader* characterLoader) {
	pair<vector<Character*>, vector<CharacterController*> > p = characterLoader->getCharacters(m_camera, m_soundPlayer_p, m_areaNum);
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ
	m_characters.insert(m_characters.end(), p.first.begin(), p.first.end());
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ
	m_characterControllers.insert(m_characterControllers.end(), p.second.begin(), p.second.end());
}

// 鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｹ鬩幢ｽ｢隴主�讓滂ｿｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｪ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｼ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｫ鬩幢ｽ｢�ｽ�ｧ髯具ｽｹ�ｽ�ｻ�ｽ�ｽ霑｢證ｦ�ｽ�ｹ�ｽ�ｧ�ｽ�ｽ�ｽ�ｭ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�｣鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｩ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｮ鬮ｫ�ｲ�ｽ�､�ｽ�ｽ�ｽ�ｧ鬯ｮ�｢�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ鬮ｯ讓奇ｽｺ�ｽ騾包ｽ･髯懈ｻゑｽｽ�ｧ
void World::changeCharacterVersion(int version) {
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		m_characters[i]->changeInfoVersion(version);
	}
}

void World::addObject(ObjectLoader* objectLoader) {
	pair<vector<Object*>, vector<Object*> > p = objectLoader->getObjects(m_areaNum);
	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
	m_stageObjects.insert(m_stageObjects.end(), p.first.begin(), p.first.end());
	// 鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ
	m_doorObjects.insert(m_doorObjects.end(), p.second.begin(), p.second.end());
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮHP鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ0鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｮ雜｣�ｽ�ｸ�ｽ�ｽ�ｽ�ｲrue
bool World::playerDead() {
	return m_player_p->getHp() <= 0;
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮHP鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｶ鬮ｮ�｣�ｽ�ｽ�ｽ�ｽAX鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void World::playerHpReset() {
	m_player_p->setHp(m_player_p->getMaxHp());
}


// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯晢ｽｾ�ｽ�ｽreeze鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void World::setSkillFlag(bool skillFlag) { 
	m_skillFlag = skillFlag;
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") {
			m_characterControllers[i]->setCharacterFreeze(skillFlag);
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讓奇ｽｺ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿厄ｽｧ�ｭ�朱屮�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ
void World::pushCharacter(Character* character, CharacterController* controller) {
	m_characters.push_back(character);
	m_characterControllers.push_back(controller);
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讓奇ｽｺ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�･鬮ｴ髮｣�ｽ�､髫ｴ蟷｢�ｽ�ｱ�ｽ�ｽ�ｽ�ｫ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ
void World::popCharacterController(int id) {
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") {
			continue;
		}
		if (m_characterControllers[i]->getAction()->getCharacter()->getId() == id) {
			delete m_characterControllers[i];
			m_characterControllers[i] = m_characterControllers.back();
			m_characterControllers.pop_back();
			i--;
		}
	}
	// Target鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｻ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯晢ｽｶ�ｽ�ｰI鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｮ�ｯ隶灘･�ｽｽ�ｻ髦ｮ蜊搾ｽｧ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮｢�ｾ�ｽ�･�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧHP=0鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_characters[i]->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") {
			continue;
		}
		if (m_characters[i]->getId() == id) {
			m_characters[i]->setHp(0);
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ貊楢ｪ難ｿｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ譎｢�ｽ�ｶ髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｹ髫ｰ遒謇假ｽｽ�ｲ
void World::createRecorder() {
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") { continue; }
		m_characterControllers[i]->setStickRecorder(new ControllerRecorder(0));
		m_characterControllers[i]->setJumpRecorder(new ControllerRecorder(0));
		m_characterControllers[i]->setSquatRecorder(new ControllerRecorder(0));
		m_characterControllers[i]->setSlashRecorder(new ControllerRecorder(0));
		m_characterControllers[i]->setBulletRecorder(new ControllerRecorder(0));
		m_characterControllers[i]->setDamageRecorder(new ControllerRecorder(0));
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯滓汚�ｽ�ｱ�ｽ�ｽ驍�摩�ｰ�ｽ�ｿ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ髯髯ｷ�ｻ�ｽ�ｵ髯隰悟･�ｽｽ�ｭ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｴ鬩包ｽｶ鬯�汚�ｽ�･�ｽ�｢�ｽ�ｽ�ｽ�ｬ鬯ｲ�ｽ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
void World::initRecorder() {
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") { continue; }
		m_characterControllers[i]->initRecorder();
	}
}

// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髫ｶ譛ｱ謇假ｽｽ�｡�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣陷ｴ�ｽ�ｽ�ｽ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜿･�ｹ�｢�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬩包ｽｶ闕ｳ讖ｸ�ｽ�｣�ｽ�ｺ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ髯ｷ�ｿ�ｽ�ｰ�ｽ�ｽ�ｽ�ｼ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void World::eraseRecorder() {
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢") { continue; }
		m_characterControllers[i]->eraseRecorder();
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｴ隰�∞�ｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｶ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｷ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ�ｽ�｣驕陋ｹ�ｽ�ｽ�ｽ�ｽ�ｻ鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ 鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｰ隴ｴ�ｧ雎主､ｲ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void World::asignedCharacterData(const char* name, CharacterData* data) {
	if (data->areaNum() == -1) { return; }
	size_t size = m_characters.size();
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｫ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
	bool flag = false;
	for (unsigned i = 0; i < size; i++) {
		if (name == m_characters[i]->getName()) {
			asignedCharacter(m_characters[i], data, data->areaNum() == m_areaNum);
			flag = true;
		}
	}
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ鬮｢�ｧ�ｽ�ｲ髫ｰ豕鯉ｽｹ�ｽ�ｽ�ｫ�ｽ�ｫ鬩包ｽｨ郢ｧ謇假ｽｽ�ｽ�ｽ�ｸ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬩搾ｿｽ謌溯ｬ先圜�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬯ｮ�｣鬲�ｼ夲ｽｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ貅ｷ萓幢ｿｽ�ｨ�ｽ�ｯ鬩包ｽｨ陞ｳ�｣邵ｺ證ｦ�ｿ�ｽ�ｽ�ｺ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ
	if (!flag && (data->areaNum() == m_areaNum || data->followName() == "鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢")) {
		Character* character = createCharacter(name);
		asignedCharacter(character, data, true);
		m_characters.push_back(character);
		CharacterController* controller = createControllerWithData(character, data);
		controller->setPlayerDirection(m_player_p, true);
		m_characterControllers.push_back(controller);
		return;
	}

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ鬩包ｽｶ闕ｳ讖ｸ�ｽ�｣�ｽ�ｹ�ｽ�ｽ隶難ｽ｣�手ｲｻ�ｿ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ鬩搾ｽｵ�ｽ�ｲ�ｽ�ｽ�ｽ�ｳain鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｫ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
	size_t controllerSize = m_characterControllers.size();
	for (unsigned int i = 0; i < controllerSize; i++) {
		const Character* character = m_characterControllers[i]->getAction()->getCharacter();
		if (name == character->getName()) {
			CharacterController* controller = createControllerWithData(character, data);
			controller->setPlayerDirection(m_player_p, true);
			delete m_characterControllers[i];
			m_characterControllers[i] = controller;
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｴ隰�∞�ｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｶ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｷ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞滂ｽｲ�ｽ�ｽ�ｽ�ｬ�ｽ�ｽ�ｽ�ｨ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ鬩包ｽｶ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｴ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
void World::asignCharacterData(const char* name, CharacterData* data, int fromAreaNum, bool notCharacterPoint) const {
	size_t size = m_characterControllers.size();
	for (unsigned i = 0; i < size; i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getName() == name) {
			const Character* c = m_characterControllers[i]->getAction()->getCharacter();
			data->setVersion(c->getVersion());
			data->setHp(c->getHp());
			data->getSkillGage(c->getSkillGage());
			data->setInvincible(c->getInvincible());
			data->setId(c->getId());
			data->setGroupId(c->getGroupId());
			data->setAreaNum(fromAreaNum);
			if (!notCharacterPoint) {
				data->setX(c->getX());
				data->setY(c->getY() + c->getHeight()); // Y2鬯ｮ�ｯ雋�ｽｯ�ｽ�ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽ｡陷�ｽｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｼ�ｽ�ｰ�ｽ�ｽ�ｽ�ｭ陷ｿ髢�ｾ證ｦ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ螳育櫨隲｢蟷�建�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｯ�ｮ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｯ�ｽ�ｮ髮狗ｿｫ�托ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｯ�ｽ�ｽ�ｽ�ｬ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣
			}
			data->setBrainName(m_characterControllers[i]->getBrain()->getBrainName());
			data->setTargetName(m_characterControllers[i]->getBrain()->getTargetName());
			if (m_characterControllers[i]->getBrain()->getFollow() != nullptr) {
				data->setFollowName(m_characterControllers[i]->getBrain()->getFollow()->getName().c_str());
			}
			data->setActionName(m_characterControllers[i]->getAction()->getActionName());
			data->setSoundFlag(m_characterControllers[i]->getAction()->getSoundPlayer() != nullptr);
			data->setControllerName(m_characterControllers[i]->getControllerName());
			break;
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｼoor鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｴ隰�∞�ｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｶ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｷ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ�ｽ�｣驕陋ｹ�ｽ�ｽ�ｽ�ｽ�ｻ鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ 鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬮ｫ�ｰ隴ｴ�ｧ雎主､ｲ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
void World::asignedDoorData(DoorData* data) {
	if (data->from() != m_areaNum) { return; }
	bool flag = false;
	for (unsigned i = 0; i < m_doorObjects.size(); i++) {
		if (data->to() == m_doorObjects[i]->getAreaNum()) {
			m_doorObjects[i]->setX1(data->x1());
			m_doorObjects[i]->setY1(data->y1());
			m_doorObjects[i]->setX2(data->x2());
			m_doorObjects[i]->setY2(data->y2());
			flag = true;
			break;
		}
	}
	if (!flag) {
		m_doorObjects.push_back(new DoorObject(data->x1(), data->y1(), data->x2(), data->y2(), data->fileName(), data->to()));
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｼoor鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｴ隰�∞�ｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｶ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｷ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞滂ｽｲ�ｽ�ｽ�ｽ�ｬ�ｽ�ｽ�ｽ�ｨ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ鬩包ｽｶ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｴ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
void World::asignDoorData(vector<DoorData*>& data, int fromAreaNum) const {
	size_t size = data.size();
	for (unsigned i = 0; i < m_doorObjects.size(); i++) {
		// 鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ蛹ｺ�ｻ繧托ｽｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
		if (m_doorObjects[i]->getAreaNum() == -1) { continue; }
		// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｰ騾搾ｽｲ�ｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬮｣雋ｻ�ｽ�ｨ髫ｲ蟶幢ｽ､�ｷ陝ｶ譏ｴ��ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ
		bool flag = false;
		for (unsigned j = 0; j < size; j++) {
			if (data[j]->to() == m_doorObjects[i]->getAreaNum() && data[j]->from() == fromAreaNum) {
				data[j]->setX1(m_doorObjects[i]->getX1());
				data[j]->setY1(m_doorObjects[i]->getY1());
				data[j]->setX2(m_doorObjects[i]->getX2());
				data[j]->setY2(m_doorObjects[i]->getY2());
				data[j]->setFrom(fromAreaNum);
				data[j]->setTo(m_doorObjects[i]->getAreaNum());
				data[j]->setFileName(m_doorObjects[i]->getFileName());
				flag = true;
				break;
			}
		}
		if (!flag) { // 鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ蜈ｷ�ｿ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ髫ｴ諠ｹ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｮ�ｽ�ｴ髫ｰ�ｽ竏橸ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ
			data.push_back(new DoorData(m_doorObjects[i]->getX1(), m_doorObjects[i]->getY1(),
				m_doorObjects[i]->getX2(), m_doorObjects[i]->getY2(),
				fromAreaNum, m_doorObjects[i]->getAreaNum(), m_doorObjects[i]->getFileName()));
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｹ髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ鬲�ｿｽ�ｽ�ｹ髣郢ｧ莨夲ｽｽ�ｫ闔ｨ�ｽ�ｽ�ｦ�ｽ�ｴ�ｽ繧托ｽｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ
void World::setPlayerOnDoor(int from) {
	int doorX1 = m_player_p->getX(), doorY2 = m_player_p->getY() + m_player_p->getHeight();
	for (unsigned int i = 0; i < m_doorObjects.size(); i++) {
		if (m_doorObjects[i]->getAreaNum() == from) {
			doorX1 = m_doorObjects[i]->getX1();
			doorY2 = m_doorObjects[i]->getY2();
		}
	}
	// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ
	m_player_p->setX(doorX1);
	m_player_p->setY(doorY2 - m_player_p->getHeight());

	// 鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ驛｢�ｧ闔会ｽｰ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ
	setPlayerFollowerPoint();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	cameraPointInit();
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�､鬯ｯ�ｮ�ｽ�ｻ�ｽ�ｽ�ｽ�ｳ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｯ�ｽ�ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽ｡陷�ｽｽ鬩包ｽｶ陷證ｦ�ｽ�｣�ｽ�ｯ�ｽ繧托ｽｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ
void World::setPlayerPoint(CharacterData* characterData) {
	m_player_p->setX(characterData->x());
	m_player_p->setY(characterData->y() - m_player_p->getHeight());
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	cameraPointInit();
}

// 鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｹ髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣陷ｴ�ｽ�ｽ�ｽ�ｽ�ｴ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬯ｯ�ｩ陷肴ｺｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ
void World::setPlayerFollowerPoint() {
	// 鬯ｩ蟷｢�ｽ�｢髫ｴ諠ｹ�ｸ讖ｸ�ｽ�ｹ�ｽ�ｲ�ｽ�ｽ陷ｿ蜴�ｽｽ�ｨ隰夲ｽｵ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｢
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		const Character* follow = m_characterControllers[i]->getBrain()->getFollow();
		// 鬯ｯ�ｮ�ｽ�ｴ髫ｰ�ｽ竏橸ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｮ�ｽ�ｴ髫ｰ�ｳ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ貊灘擠�ｽ�ｯ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
		if (follow != nullptr && m_playerId == follow->getId()) {
			// Controller鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｮ�ｯ雋翫ｑ�ｽ�ｽ�ｽ�｢鬮ｫ�ｲ陝ｶ蟷｢�ｽ�ｲ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｮ蜿厄ｽ｢�ｧ隴擾ｽｭaracter鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｧ�ｽ�ｫ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ
			for (unsigned int j = 0; j < m_characters.size(); j++) {
				if (m_characterControllers[i]->getAction()->getCharacter()->getId() == m_characters[j]->getId()) {
					m_characters[j]->setX(m_player_p->getX());
					m_characters[j]->setY(m_player_p->getY() + m_player_p->getHeight() - m_characters[j]->getHeight());
					break;
				}
			}
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ�･�ｽ�ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�｣陷ｴ�ｽ�ｽ�ｽ�ｽ�ｴ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜿･�ｹ�｢�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ陷ｿ謔ｶ貂夲ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
void World::cameraPointInit() {
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (m_characters[i]->getId() == m_focusId) {
			m_camera->setPoint(m_characters[i]->getCenterX(), m_characters[i]->getCenterY());
			break;
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ1鬯ｮ�｣陷ｴ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｱ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬮｣蛹�ｽｽ�ｵ髮句･�ｽｿ�ｽ�ｽ�ｿ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｿ鬯ｮ�｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｴ鬮｣蛹�ｽｽ�ｳ
void World::asignedCharacter(Character* character, CharacterData* data, bool changePosition) {
	character->changeInfoVersion(data->version());
	if (data->id() != -1) {
		// 鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｲ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｯ陷茨ｽｷ�ｽ�ｽ�ｽ�ｻ鬮ｫ�ｴ陞ｳ閧ｲ讚ｨ髯ｷ闌ｨ�ｿ�ｽ陷芽肩�ｿ�ｽ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ蛹ｺ�ｻ繧托ｽｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
		character->setHp(data->hp());
		character->setSkillGage(data->skillGage());
	}
	character->setInvincible(data->invincible());
	character->setGroupId(data->groupId());
	if (changePosition) {
		character->setX(data->x());
		// Y鬯ｮ�ｯ雋�ｽｯ�ｽ�ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽ｡陷�ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｮ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｯ�ｽ�ｮ髮狗ｿｫ�托ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ譎｢�ｽ�ｶ髯ｷ�ｷ�ｽ�ｮ�ｽ�ｽ�ｽ�ｻ鬯ｯ�ｮ�ｽ�ｫ�ｽ�ｽ�ｽ�ｱ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ
		character->setY(data->y() - character->getHeight());
	}
}

// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｩ鬮ｦ�ｪ�ｽ謇假ｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髫ｲ�ｷ陋ｹ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ陷ｿ蜴�ｽｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ1鬯ｮ�ｯ陋ｹ�ｺ�ｽ�ｻ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｱ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬮｣蛹�ｽｽ�ｵ髮句･�ｽｿ�ｽ�ｽ�ｿ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｿ鬯ｮ�｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｴ鬮｣蛹�ｽｽ�ｳ
CharacterController* World::createControllerWithData(const Character* character, CharacterData* data) {
	size_t size = m_characters.size();
	// Action鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ
	CharacterAction* action = nullptr;
	for (unsigned int j = 0; j < size; j++) {
		if (m_characters[j]->getName() == character->getName()) {
			action = createAction(data->actionName(), m_characters[j], data->soundFlag() ? m_soundPlayer_p : nullptr);
			break;
		}
	}
	// Brain鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ
	Brain* brain = createBrain(data->brainName(), m_camera);
	brain->setCharacterAction(action);
	string follow = data->followName();
	for (unsigned int j = 0; j < size; j++) {
		if (m_characters[j]->getName() == follow) {
			brain->searchFollow(m_characters[j]);
			break;
		}
	}
	// Controller鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ隰�∞�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｷ�ｽ縺具ｿｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ
	return createController(data->controllerName(), brain, action);
}

/*
*  鬯ｮ�ｫ�ｽ�ｰ鬯ｲ�ｽ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮｣蛹�ｽｽ�ｳ髯晢ｽｯ�ｽ�ｩ鬯ｮ�ｮ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
*/
void World::battle() {
	if (!m_soundPlayer_p->checkBGMplay()) {
		m_soundPlayer_p->playBGM();
	}
	
	// 鬨ｾ蛹�ｽｽ�ｻ鬯ｮ�ｱ�ｽ�｢髫ｴ闃ｽ謖呻ｿｽ�ｻ�ｽ�｢髯ｷ�ｽ�ｽ�ｦ鬨ｾ
	if (dealBrightValue()) { return; }

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯晢ｽｶ隴惹ｹ怜･暦ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ遏ｩ�｡譚ｿ�ｧ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢
	if (m_objectConversation != nullptr) {
		m_objectConversation->play();
		// 鬯ｮ�｣髮具ｽｻ�ｽ�ｽ�ｽ�ｨ鬮ｯ讓奇ｽｺ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｱ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｨ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (m_objectConversation->getFinishFlag()) {
			delete m_objectConversation;
			m_objectConversation = nullptr;
		}
		return;
	}

	// deleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	deleteObject(m_stageObjects);
	deleteObject(m_attackObjects);

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ諛育袖�ｽ�ｺ�ｽ�ｷ髫ｲ�｢陝ｷ�ｽ譴ｭ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
	// 鬯ｮ�｣陋ｹ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ鬩搾ｽｵ�ｽ�ｲ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ
	updateCharacter();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	controlCharacter();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	controlObject();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ闕ｳ�ｻ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	controlItem();

	// ボス撃破のエフェクト
	createBossDeadEffect();

	// カメラの更新
	updateCamera();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｵ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�｣�ｽ�ｽ髮懶ｽ｣�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｮ�ｽ�ｫ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讓奇ｽｺ蛛�ｽｽ陋ｾ鬆ｼ
	m_soundPlayer_p->setCameraX(m_camera->getX());

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｹ髫ｴ竏ｵ�ｻ�ｽ�ｱ�ｪ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
	updateAnimation();

	// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｶ�ｷ�ｽ�ｿ�ｽ�ｫ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ
	changePlayer(m_playerChanger->play(m_soundPlayer_p, m_characterControllers, m_player_p));

}

void World::changePlayer(const Character* nextPlayer) {
	if (nextPlayer == nullptr) { return; }
	// 鬯ｮ�｣驕貞､ｧ�ｴ鬮ｫ�ｨ�ｽ�ｬ�ｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ髫ｰ螟ｲ�ｿ�ｽ�ｽ�ｫ陝ｶ蟷｢�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｱ�ｽ�ｽ�ｽ�ｰPC鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮBrain鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (m_characterControllers[i]->getAction()->getCharacter()->getId() == m_player_p->getId()) {
			m_characterControllers[i]->setBrain(createBrain(m_playerChanger->getPrevBrainName(), m_camera));
			m_characterControllers[i]->setActionSound(nullptr);
			break;
		}
	}
	// 鬯ｮ�ｫ�ｽ�ｹ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｶ蟷｢�ｽ�ｲ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮｣蛹�ｽｽ�ｵ髫ｴ謫ｾ�ｽ�ｴ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ謇假ｽｽ�｢�ｽ�ｽ�ｽ�ｸeyboardBrain鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
	for (unsigned int i = 0; i < m_characterControllers.size(); i++) {
		if (nextPlayer->getId() == m_characterControllers[i]->getAction()->getCharacter()->getId()) {
			string brainName = m_characterControllers[i]->getBrain()->getBrainName();
			m_characterControllers[i]->setBrain(new KeyboardBrain(m_camera));
			m_playerChanger->setPrevBrainName(brainName);
			m_characterControllers[i]->setActionSound(m_soundPlayer_p);
			break;
		}
	}
	// 鬯ｮ�ｫ�ｽ�ｹ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｫ�ｲ陝ｶ蟷｢�ｽ�ｲ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮｣蛹�ｽｽ�ｵ髫ｴ謫ｾ�ｽ�ｴ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ鬯伜∞�ｽ�ｩ�ｽ�ｫayer鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	for (unsigned int i = 0; i < m_characters.size(); i++) {
		if (nextPlayer->getId() == m_characters[i]->getId()) {
			m_player_p = m_characters[i];
			m_playerId = m_player_p->getId();
			for (int j = 0; j < m_characterControllers.size(); j++) {
				if (m_characterControllers[j]->getBrain()->needSearchFollow()) {
					m_characterControllers[j]->searchFollowCandidate(m_player_p);
				}
			}
			break;
		}
	}
	m_focusId = m_player_p->getId();
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ�･�ｽ�ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
void World::updateCamera(int gx, int gy, double gex) {

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ髯懈瑳�ｻ莨夲ｽｽ�ｺ闔ｨ竏�ｲｻ�ｿ�ｽ�ｽ�ｧ鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｨ鬮ｫ�ｨ
	m_camera->shaking();

	// 鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩搾ｽｵ�ｽ�ｺ髫ｴ諠ｹ�ｼ螟ｲ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	m_camera->setEx(gex);

	// 鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣闔ｨ諛ｶ�ｽ�ｧ鬮ｮ�｣�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｨ
	m_camera->setGPoint(gx, gy);
	
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�､鬮ｯ譎｢�ｽ�ｯ�ｽ�ｽ�ｽ�ｼ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣闔ｨ諛ｶ�ｽ�ｧ鬮ｮ�｣�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬯ｯ�ｮ�ｽ�ｴ髯ｷ�ｿ�ｽ�ｰ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�｣鬮ｫ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮｣豈費ｽｼ螟ｲ�ｽ�ｽ�ｽ�｣�ｽ�ｽ�ｽ�ｽ
	m_camera->move();
}

// Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮ｯ譎擾ｿｽ�ｽ�ｽ�ｽ�ｶ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�｣鬮ｯ蛹ｺ�ｻ繧托ｽｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
void World::adjustBattleCamera() {

	// 鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽｬ陞ｳ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｶ
	int gx = 0, gy = 0;
	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｴ鬮｢�ｧ�ｽ�ｴ鬮ｴ雜｣�ｽ�ｨ鬮ｯ讖ｸ�ｽ�ｻ�ｽ�ｽ�ｽ�ｬ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｯ陋ｹ�ｺ�ｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
	int max_dx = 0, max_dy = 0;
	// 画面内に入れようとする距離の最大　これより離れたキャラは無視
	const int MAX_DISABLE = 2500;
	size_t size = m_characters.size();
	for (unsigned int i = 0; i < size; i++) {
		// 鬯ｮ�｣驕呈汚�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｫ鬩幢ｽ｢隴趣ｽ｢�ｽ�ｽ�ｽ�ｵ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｻ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ雋�ｽｯ�ｽ�ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽ｡陷�ｽｽ鬩包ｽｶ鬯�汚�ｽ�･�ｽ�｢髫ｲ�ｽ�ｺ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ譎｢�ｽ�ｶ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｽ
		if (m_focusId == m_characters[i]->getId()) {
			m_camera->setGPoint(m_characters[i]->getAtariCenterX(), m_characters[i]->getAtariCenterY());
		}
		// 鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ髫ｴ�ｽ謳ｨ�ｽ�ｰ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｻ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｮ�｣雎郁ｲｻ�ｽ�ｼ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｮ�ｯ隶灘･�ｽｽ�ｻ髦ｮ蜊搾ｽｧ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｮ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬮ｫ�ｴ陷ｿ蜴�ｽｽ�ｧ�ｽ�ｫ�ｽ�ｽ�ｽ�ｱ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ讖ｸ�ｽ�ｳ髯樊ｻゑｽｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ
		else if (m_characters[i]->getHp() > 0) {
			int x = m_characters[i]->getX();
			if (m_camera->getX() < x) { x += m_characters[i]->getWide() * 2; }
			else { x -= m_characters[i]->getWide(); }
			int dx = abs(m_camera->getX() - x);
			if (dx < MAX_DISABLE) {
				max_dx = max(max_dx, dx);
				int y = m_characters[i]->getY();
				if (m_camera->getY() < y) { y += m_characters[i]->getHeight() * 3 / 2; }
				else { y -= m_characters[i]->getHeight() / 2; }
				max_dy = max(max_dy, abs(m_camera->getY() - y));
			}
		}
	}

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ
	// 鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｯ�ｮ�ｽ�ｦ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬩�ｽ�ｽ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬩包ｽｶ闕ｳ讖ｸ�ｽ�｣�ｽ�ｺ�ｽ�ｽ�ｽ�ｲ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩搾ｿｽ謌溯ｬ先圜�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ鬩包ｽｶ鬮ｮ�｣�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｲ鬩包ｽｶ闕ｵ諤懈ｬｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｯ�ｮ�ｽ�ｦ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ�ｽ�｣驕陋ｹ�ｽ�ｽ�ｽ�ｽ�ｻ鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	double nowEx = m_camera->getEx();
	double gex = nowEx;
	int shift = controlLeftShift() + controlRightShift();
	if (shift == 1) {
		bool zoomOutMode = m_camera->getZoomOutMode();
		m_camera->setZoomOutMode(!zoomOutMode);
		if (zoomOutMode) {
			m_soundPlayer_p->pushSoundQueue(m_cameraInSound);
		}
		else {
			m_soundPlayer_p->pushSoundQueue(m_cameraOutSound);
		}
	}
	if (m_camera->getZoomOutMode()) {
		if (nowEx > m_cameraMinEx) {
			m_camera->setEx(max(nowEx - 0.02 * m_exX, 0.1));
		}
	}
	else {
		int nowWide = (int)(GAME_WIDE / 2 / nowEx);
		int nowHeight = (int)(GAME_HEIGHT / 2 / nowEx);
		if (nowEx > m_cameraMinEx && (max_dx > nowWide || max_dy > nowHeight)) {
			// 鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ
			double d = double(max(max_dx - nowWide, max_dy - nowHeight));
			m_camera->setEx(nowEx - min(0.1, d / 100000) * m_exX);
		}
		else if (nowEx < m_cameraMaxEx && (max_dx < nowWide && max_dy < nowHeight)) {
			// 鬯ｮ�ｫ�ｽ�ｲ�ｽ�ｽ�ｽ�｡�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隶灘･�ｽｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ
			double d = double(max(nowWide - max_dx, nowHeight - max_dy));
			m_camera->setEx(nowEx + min(0.005, d / 100000) * m_exX);
		}
	}

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
	updateCamera(gx, gy, gex);
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｹ髫ｴ竏ｵ�ｻ�ｽ�ｱ�ｪ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
void World::updateAnimation() {
	for (unsigned int i = 0; i < m_animations.size(); i++) {
		m_animations[i]->setVy(m_animations[i]->getVy() + 1);
		m_animations[i]->count();
		if (m_animations[i]->getFinishFlag()) {
			delete m_animations[i];
			m_animations[i] = m_animations.back();
			m_animations.pop_back();
			i--;
		}
	}
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ諛育袖�ｽ�ｺ�ｽ�ｷ髫ｲ�｢陝ｷ�ｽ譴ｭ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
void World::updateCharacter() {
	size_t size = m_characterControllers.size();
	for (unsigned int i = 0; i < size; i++) {
		// Brain鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｫ鬮ｯ�ｬ隲帑ｺ･蜷茨ｿｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬮｣蛹�ｽｽ�ｵ髫ｴ謫ｾ�ｽ�ｴ髯橸ｽｳ陞滂ｽｲ�ｽ�ｽ�ｽ�ｬ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ
		if (m_characterControllers[i]->getBrain()->needSearchTarget()) {
			Character* target = m_characters[GetRand((int)m_characters.size() - 1)];
			m_characterControllers[i]->searchTargetCandidate(target);
		}
	}
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
void World::controlCharacter() {
	size_t size = m_characterControllers.size();
	for (unsigned int i = 0; i < size; i++) {
		CharacterController* controller = m_characterControllers[i];

		// HP邵ｺ0邵ｺ�ｪ郢ｧ蟲ｨ縺帷ｹｧ�ｭ郢晢ｿｽ�ｽ
		if (controller->getAction()->getCharacter()->getHp() == 0 && !controller->getAction()->getCharacter()->haveDeadGraph()) {
			continue;
		}

		// 鬯ｯ�ｮ�ｽ�ｯ�ｽ�ｽ�ｽ�ｦ鬮ｫ�ｰ騾搾ｽｲ�ｽ�ｺ�ｽ�ｯ髯ｷ迚呻ｽｸ譎丞ｻｺ鬲�ｿｽ�ｽ�ｹ髣郢ｧ謇假ｽｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ
		controller->init();

		// 繧ｪ繝悶ず繧ｧ繧ｯ繝医→縺ｮ蠖薙◆繧雁愛螳
		atariCharacterAndObject(controller, m_stageObjects, true);
		atariCharacterAndObject(controller, m_stageObjects, false); // 1蝗樒岼縺ｧ譁憺擇縺ｫ縺�ｋ縺九′繧上°繧翫√◎繧後↓繧医▲縺ｦ蜃ｦ逅�′螟峨ｏ繧九◆繧2蝗樒岼縺悟ｿ�ｦ

		if (controller->getAction()->getCharacter()->getHp() > 0) {
			atariCharacterAndObject(controller, m_attackObjects, false);
		}
		if (controller->getAction()->getCharacter()->getId() == m_playerId) {
			atariCharacterAndDoor(controller, m_doorObjects);
		}

		// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｫ鬮ｯ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ original鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ�･�ｽ�ｽ郢ｽ謳ｾ�ｿ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (!m_duplicationFlag || m_characterControllers[i]->getAction()->getCharacter()->getId() != m_playerId) {
			controller->control();
			controller->setPlayerDirection(m_player_p);
		}

		// 鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｮ�｣鬲�ｼ夲ｽｽ�ｽ�ｽ�ｶ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ
		Object* bulletAttack = controller->bulletAttack();
		if (bulletAttack != nullptr) { m_attackObjects.push_back(bulletAttack); }

		// 鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ蜈ｷ�ｽ�ｻ�ｽ�ｽ�ｽ�､鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ
		Object* slashAttack = controller->slashAttack();
		if (slashAttack != nullptr) { m_attackObjects.push_back(slashAttack); }

		// 鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｿ鬯ｮ�｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｴ鬮｣蛹�ｽｽ�ｳ original鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ�･�ｽ�ｽ郢ｽ謳ｾ�ｿ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (!m_duplicationFlag || m_characterControllers[i]->getAction()->getCharacter()->getId() != m_playerId) {
			controller->action();
		}

		// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻ�ｿｽ鬮ｮ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｮ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｯ�ｽ�ｨ�ｽ�ｽ�ｽ�ｾ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｼ鬮ｫ�ｲ�ｽ�｢髯晢ｽｷ�ｽ�ｽ�ｽ�･
		penetrationCharacterAndObject(controller, m_stageObjects);
	}
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
void World::controlObject() {
	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ髣鯉ｽｨ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｫ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	actionObject(m_stageObjects);

	// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｷ�ｽ�ｮ鬮ｯ讖ｸ�ｽ�ｺ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	actionObject(m_attackObjects);

	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ<->鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
	atariStageAndAttack();

	// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ<->鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
	atariAttackAndAttack();
}

// Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ闕ｳ�ｻ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
void World::controlItem() {
	for (unsigned int i = 0; i < m_itemVector.size(); i++) {
		// 鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｿ鬯ｯ�ｮ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ謳ｾ�ｿ�ｽ�ｽ�ｽ�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｻ鬩包ｽｶ隰ｫ�ｾ�ｽ�ｽ�ｽ�ｩ
		if (m_itemVector[i]->getDeleteFlag()) {
			// 鬯ｮ�ｯ�ｽ�ｷ髣費ｽｨ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｫ鬮ｫ�ｲ隶厄ｽｸ�ｽ�ｽ�ｽ�ｺ鬮ｮ雜｣�ｽ�ｬ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｰ騾搾ｽｲ�ｽ�ｻ郢ｧ謇假ｽｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｨ�ｽ�ｾ髯滂ｿｽ螻ｮ�ｽ�ｽ�ｽ�ｻ髣費ｽｨ陞滂ｽｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｶ闔ｨ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､
			if (CheckSoundMem(m_itemVector[i]->getSound()) == 0) {
				delete m_itemVector[i];
				m_itemVector[i] = m_itemVector.back();
				m_itemVector.pop_back();
				i--;
			}
			continue;
		}
		// 鬯ｮ�ｯ陷茨ｽｷ�ｽ�ｽ�ｽ�ｻ鬮ｫ�ｴ髮懶ｽ｣�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ陋ｻ�ｹ�ｽ�ｽ�ｽ�ｹ
		m_itemVector[i]->init();
		// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｵ諤懈ｬｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ鬩包ｽｶ鬮ｮ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
		for (unsigned int j = 0; j < m_stageObjects.size(); j++) {
			int x1 = 0, y1 = 0, x2 = 0, y2 = 0;
			m_itemVector[i]->getPoint(&x1, &y1, &x2, &y2);
			int vx = m_itemVector[i]->getVx();
			int vy = m_itemVector[i]->getVy();
			if (m_stageObjects[j]->atariDropBox(x1, y1, x2, y2, vx, vy)) {
				m_itemVector[i]->setGrand(true);
				m_itemVector[i]->setY(m_stageObjects[j]->getY(m_itemVector[i]->getX()));
			}
			m_itemVector[i]->setVx(vx);
			m_itemVector[i]->setVy(vy);
		}
		// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
		if (m_itemVector[i]->atariCharacter(m_player_p)) {
			m_soundPlayer_p->pushSoundQueue(m_itemVector[i]->getSound());
			// ここでお金をWorldに反映
			m_money = min(m_money + m_player_p->getMoney(), MAX_MONEY);
			m_player_p->setMoney(0);
		}
		// 鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
		m_itemVector[i]->action();
	}
}

//  Battle�壹く繝｣繝ｩ繧ｯ繧ｿ繝ｼ縺ｨ繧ｪ繝悶ず繧ｧ繧ｯ繝医�蠖薙◆繧雁愛螳
void World::atariCharacterAndObject(CharacterController* controller, vector<Object*>& objects, bool slope) {
	// 螢√ｄ蠎翫が繝悶ず繧ｧ繧ｯ繝医�蜃ｦ逅 (蠖薙◆繧雁愛螳壹→蜍輔″)
	for (unsigned int i = 0; i < objects.size(); i++) {
		if (objects[i]->slopeFlag() != slope) { continue; }
		// 蠖薙◆繧雁愛螳壹ｒ縺薙％縺ｧ陦後≧
		if (objects[i]->atari(controller)) {
			const Character* character = controller->getAction()->getCharacter();
			int targetX1 = 0, targetY1 = 0, targetX2 = 0, targetY2 = 0;
			character->getAtariArea(&targetX1, &targetY1, &targetX2, &targetY2);
			// エフェクト作成
			int x = (targetX1 + targetX2) / 2;
			int y = (targetY1 + targetY2) / 2;
			Animation* atariAnimation = objects[i]->createAnimation(x, y, 3);
			if (atariAnimation != nullptr) {
				m_animations.push_back(atariAnimation);
			}
			createDamageEffect(x, y, GetRand(3) + 1);
			// 効果音
			int soundHandle = objects[i]->getSoundHandle();
			int panPal = adjustPanSound(x, m_camera->getX());
			m_soundPlayer_p->pushSoundQueue(soundHandle, panPal);
			// HP = 0邵ｺ�ｫ邵ｺ�ｪ邵ｺ�｣邵ｺ貅倪�邵ｺ謳ｾ�ｼ蛹ｻ��ｹｧ蟲ｨ�檎ｸｺ貅倪�邵ｺ謳ｾ�ｼ
			if (!character->haveDeadGraph() && character->getHp() == 0) {
				if (character->getBossFlag()) {
					m_bossDeadEffectCnt = 300;
				}
				else {
					m_animations.push_back(new Animation(x, y, 3, m_characterDeadGraph));
					m_camera->shakingStart(20, 20);
					m_soundPlayer_p->pushSoundQueue(m_characterDeadSound, panPal);
					if (!m_duplicationFlag && character->getGroupId() != m_player_p->getGroupId() && !character->getBossFlag()) {
						int r = GetRand(100);
						// スキル発動中でなければ雑魚キャラは確率でアイテムが落ちる
						if (r < 20) {
							m_itemVector.push_back(new CureItem("cure", x, y, 50));
						}
						else {
							for (int i = 0; i < r % 4; i++) {
								MoneyItem* money = new MoneyItem("money", x, y, 1);
								money->setVx(GetRand(30) - 15);
								money->setVy(GetRand(30) - 31);
								m_itemVector.push_back(money);
							}
						}
					}
				}
			}
		}
		// deleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
		if (objects[i]->getDeleteFlag()) {
			delete objects[i];
			// 鬯ｮ�ｫ�ｽ�ｴ髯晢ｽｷ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｮ�ｯ隴趣ｽ｢�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ鬩搾ｿｽ遘�ｿｽ�ｽ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｩ鬮ｮ蜈ｷ�ｿ�ｽ遶乗ｩｸ�ｿ�ｽ�ｽ�ｼ
			objects[i] = objects.back();
			objects.pop_back();
			i--;
		}
	}
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩搾ｽｵ�ｽ�ｺ髯ｷ隴会ｽｦ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
void World::atariCharacterAndDoor(CharacterController* controller, vector<Object*>& objects) {

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｯ�ｽ�ｷ髯ｷ�･�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ驛｢�ｧ隰�∞�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩包ｽｶ鬯�汚�ｽ�･�ｽ�｢髫ｲ�､�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�･鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ貅ｷ萓幢ｿｽ�ｨ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
	if (m_skillFlag) { return; }

	// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髯橸ｽｳ髣鯉ｽｨ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｫ鬩搾ｽｵ�ｽ�ｺ髫ｶ蜻ｵ�ｶ�｣�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ (鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ鬩包ｽｶ鬮ｮ�ｽ�ｽ�ｮ陞｢�ｽ遶企ｷｹ�ｫ�ｴ陜捺ｺｷ郢ｭ�ｽ�ｽ�ｽ�ｳ)
	for (unsigned int i = 0; i < objects.size(); i++) {
		if (m_areaLock) {
			objects[i]->setTextDisp(false);
			continue;
		}
		// 鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｽ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬯ｮ�ｦ�ｽ�ｮ髯ｷ�ｻ�ｽ�ｻ�ｽ�ｽ�ｽ�ｼ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｯ�ｽ�ｽ�ｽ�ｦ鬮ｯ貅ｷ萓幢ｿｽ�ｨ�ｽ�ｯ鬯ｲ蛛�ｽｽ�ｬ
		if (objects[i]->atari(controller) && controller->getActionKey()) {
			if (objects[i]->getAreaNum() == -1) {
				// 鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ鬩搾ｽｵ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ蛹ｺ�ｻ繧托ｽｽ�ｽ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ
				if (objects[i]->getTextNum() != -1) {
					m_objectConversation = new Conversation(objects[i]->getTextNum(), this, m_soundPlayer_p);
				}
			}
			else {
				// 鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｮ蜈ｷ�ｿ�ｽ�ｽ�ｽ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｷ 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｨ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｯ�ｩ陷肴ｺｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｲ鬯ｯ�ｨ�ｽ�ｾ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｯ�ｨ�ｽ�ｾ
				m_nextAreaNum = objects[i]->getAreaNum();
				// 鬯ｯ�ｨ�ｽ�ｾ髯具ｽｹ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｯ�ｯ�ｽ�ｮ�ｽ�ｽ�ｽ�ｱ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ髣�ｽ�･髯晢ｿｽ�｣�ｯ�ｽ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢
				m_brightValue--;
				m_soundPlayer_p->pushSoundQueue(m_doorSound);
			}
		}
	}

}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｼ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬩包ｽｶ闕ｳ讖ｸ�ｽ�､�ｽ�ｲ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ<->鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
void World::atariStageAndAttack() {
	for (unsigned int i = 0; i < m_attackObjects.size(); i++) {
		int x = m_attackObjects[i]->getCenterX();
		int y = m_attackObjects[i]->getCenterY();
		for (unsigned int j = 0; j < m_stageObjects.size(); j++) {
			// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｲ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｵ諤懈ｬｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ鬩包ｽｶ鬯�汚�ｽ�･�ｽ�｢髯ｷ�ｽ�ｶ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｿ�ｽ�ｽ�ｽ�･鬮ｫ�ｲ�ｽ�｢髯晢ｽｷ�ｽ�ｽ�ｽ�･
			if (m_stageObjects[j]->atariObject(m_attackObjects[i])) {
				// 郢ｧ�ｨ郢晁ｼ斐♂郢ｧ�ｯ郢昜ｺ包ｽｽ諛茨ｿｽ
				Animation* atariAnimation = m_attackObjects[i]->createAnimation(x, y, 3);
				if (atariAnimation != nullptr) {
					m_animations.push_back(atariAnimation);
				}
				int soundHandle = m_attackObjects[i]->getSoundHandle();
				int panPal = adjustPanSound(x, m_camera->getX());
				m_soundPlayer_p->pushSoundQueue(soundHandle, panPal);
			}
			// 鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｵ諤懈ｬｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽdeleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
			if (m_stageObjects[j]->getDeleteFlag()) {
				delete m_stageObjects[j];
				m_stageObjects[j] = m_stageObjects.back();
				m_stageObjects.pop_back();
				j--;
			}
		}
		// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽdeleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｴ螟ｧ�｣�ｼ髯ｦ�ｷ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ
		if (m_attackObjects[i]->getDeleteFlag()) {
			createBomb(x, y, m_attackObjects[i]);
			delete m_attackObjects[i];
			m_attackObjects[i] = m_attackObjects.back();
			m_attackObjects.pop_back();
			i--;
		}
	}
}

//  Battle�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮ｯ蜈ｷ�ｽ�ｻ�ｽ�ｽ�ｽ�､鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ<->鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ雋�ｽｷ�ｽ�ｽ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ鬯ｯ�ｮ�ｽ�ｮ驕ｶ謫ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ
void World::atariAttackAndAttack() {
	if (m_attackObjects.size() == 0) { return; }
	for (unsigned int i = 0; i < m_attackObjects.size() - 1; i++) {
		int x = m_attackObjects[i]->getCenterX();
		int y = m_attackObjects[i]->getCenterY();
		for (unsigned int j = i + 1; j < m_attackObjects.size(); j++) {
			// 鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｫ�ｽ�ｰ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬩包ｽｯ�ｽ�ｶ�ｽ�ｽ�ｽ�ｲ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�｢鬩包ｽｶ闕ｵ諤懈ｬｾ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ鬩包ｽｶ鬯�汚�ｽ�･�ｽ�｢髯ｷ�ｽ�ｶ髣憺屮�ｽ�ｭ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｿ�ｽ�ｽ�ｽ�･鬮ｫ�ｲ�ｽ�｢髯晢ｽｷ�ｽ�ｽ�ｽ�･
			if (m_attackObjects[j]->atariObject(m_attackObjects[i])) {
				// 郢ｧ�ｨ郢晁ｼ斐♂郢ｧ�ｯ郢昜ｺ包ｽｽ諛茨ｿｽ
				Animation* atariAnimation = m_attackObjects[j]->createAnimation(x, y, 3);
				if (atariAnimation != nullptr) {
					m_animations.push_back(atariAnimation);
				}
				createBomb(x, y, m_attackObjects[i]);
				int soundHandle = m_attackObjects[i]->getSoundHandle();
				int panPal = adjustPanSound(x, m_camera->getX());
				m_soundPlayer_p->pushSoundQueue(soundHandle, panPal);
			}
		}
	}
}

// Battle: 霎ｷ�ｽ蛹ｱ郢ｧ螳夲ｽｵ�ｷ邵ｺ阮吮�
void World::createBomb(int x, int y, Object* attackObject) {
	if (attackObject == nullptr) {
		m_animations.push_back(new Animation(x, y, 3, m_bombGraph));
		// 効果音
		m_soundPlayer_p->pushSoundQueue(m_bombSound, adjustPanSound(x, m_camera->getX()));
		// 画面の揺れ
		m_camera->shakingStart(20, 20);
	}
	else if (attackObject->getBomb()) {
		// 爆発
		BombObject* bomb = new BombObject(x, y, 500, 500, attackObject->getDamage(), new Animation(x, y, 3, m_bombGraph));
		bomb->setCharacterId(attackObject->getCharacterId());
		bomb->setGroupId(attackObject->getGroupId());
		m_attackObjects.push_back(bomb);
		// 陷会ｽｹ隴ｫ諞ｺ豬ｹ
		m_soundPlayer_p->pushSoundQueue(m_bombSound, adjustPanSound(x, m_camera->getX()));
		// 騾包ｽｻ鬮ｱ�｢邵ｺ�ｮ隰�ｺ郢ｧ
		m_camera->shakingStart(20, 20);
	}
}

// Battle: ダメージエフェクト作成
void World::createDamageEffect(int x, int y, int sum) {
	for (int i = 0; i < sum; i++) {
		Animation* animation = new Animation(x + GetRand(100) - 50, y + GetRand(100) - 50, 120, m_characterDamageGraph);
		animation->setVx(GetRand(30) - 15);
		animation->setVy(GetRand(30) - 31);
		animation->setMovable(true);
		m_animations.push_back(animation);
	}
}

// Battle: ボスがやられたときの爆発エフェクト
void World::createBossDeadEffect() {
	if (m_bossDeadEffectCnt > 0) {
		m_bossDeadEffectCnt--;
		if (m_bossDeadEffectCnt % 20 == 0) {
			for (unsigned int i = 0; i < m_characters.size(); i++) {
				if (m_characters[i]->getBossFlag()) {
					int x1 = m_characters[i]->getX();
					int y1 = m_characters[i]->getY();
					int x2 = x1 + m_characters[i]->getWide();
					int y2 = y1 + m_characters[i]->getHeight();
					int x = GetRand(x2 - x1) + x1;
					int y = GetRand(y2 - y1) + y1;
					createBomb(x, y, nullptr);
					createDamageEffect(x, y, 2);
					break;
				}
			}
		}
	}
}

// 各キャラが目標地点へ移動するだけ 全員到達したらtrueを返す
bool World::moveGoalCharacter() {
	// deleteFlag鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬯ｮ�｣隰悟･�ｽｽ�ｼ郢晁ｲ碁ｬｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ髯橸ｽｳ陞｢�ｽ遶包ｽｧ鬮｣雋ｻ�ｽ�ｨ驕ｶ荵怜��ｽ�ｱ郢ｧ荵晢ｼ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ�ｽ�ｷ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ髴托ｽ｢隴会ｽｦ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｲ
	deleteObject(m_stageObjects);
	deleteObject(m_attackObjects);

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬮ｯ諛育袖�ｽ�ｺ�ｽ�ｷ髫ｲ�｢陝ｷ�ｽ譴ｭ�ｽ�ｽ�ｽ�ｦ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｾ鬯ｯ�ｮ�ｽ�ｮ鬮ｮ諛ｶ�ｽ�｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ隶灘･�ｽｽ�ｺ�ｽ�ｽ髯具ｽｻ�ｽ�､鬮ｯ譎｢�ｽ�ｲ�ｽ�ｽ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ
	// 鬯ｮ�｣陋ｹ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ諤憺●�ｽ�ｽ�ｽ�ｫ鬩搾ｽｵ�ｽ�ｲ髯懶ｽ｣�ｽ�､�ｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬯ｮ�ｮ陋ｹ�ｺ�ｽ�ｨ隰夲ｽｵ�ｽ�ｽ隴幢ｽｱ�ｽ�ｬ�ｽ�ｮ�ｽ�ｽ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ鬮ｯ�ｷ闔ｨ螟ｲ�ｽ�ｽ�ｽ�ｱ鬮ｫ�ｨ�ｽ�ｳ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ鬮｣蛹�ｽｽ�ｵ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ鬮｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ
	updateCharacter();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｣鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｿ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	bool allCharacterAlreadyGoal = true;
	size_t size = m_characterControllers.size();
	for (unsigned int i = 0; i < size; i++) {
		CharacterController* controller = m_characterControllers[i];

		// HP邵ｺ0邵ｺ�ｪ郢ｧ蟲ｨ縺帷ｹｧ�ｭ郢晢ｿｽ�ｽ
		if (controller->getAction()->getCharacter()->getHp() == 0 && !controller->getAction()->getCharacter()->haveDeadGraph()) { 
			continue;
		}

		// 鬯ｯ�ｮ�ｽ�ｯ�ｽ�ｽ�ｽ�ｦ鬮ｫ�ｰ騾搾ｽｲ�ｽ�ｺ�ｽ�ｯ髯ｷ迚呻ｽｸ譎丞ｻｺ鬲�ｿｽ�ｽ�ｹ髣郢ｧ謇假ｽｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｨ�ｽ�ｾ
		controller->init();

		// 繧ｪ繝悶ず繧ｧ繧ｯ繝医→縺ｮ蠖薙◆繧雁愛螳
		atariCharacterAndObject(controller, m_stageObjects, true);
		atariCharacterAndObject(controller, m_stageObjects, false); // 1蝗樒岼縺ｧ譁憺擇縺ｫ縺�ｋ縺九′繧上°繧翫√◎繧後↓繧医▲縺ｦ蜃ｦ逅�′螟峨ｏ繧九◆繧2蝗樒岼縺悟ｿ�ｦ

		if (controller->getAction()->getCharacter()->getHp() > 0) {
			atariCharacterAndObject(controller, m_attackObjects, false);
		}

		// 鬯ｯ�ｨ�ｽ�ｾ�ｽ�ｽ�ｽ�ｶ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｶ髴難ｽ｣陋滂ｽｬ陞ｳ�ｽ蝮ｿ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｹ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｸ鬯ｯ�ｩ陷肴ｺｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｻ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ蜈ｷ�ｽ�ｹ�ｽ�ｽ�ｽ�ｺ鬮ｫ�ｴ�ｽ�ｯ�ｽ�ｽ�ｽ�ｽ髫ｰ original鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ�･�ｽ�ｽ郢ｽ謳ｾ�ｿ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (!m_duplicationFlag || m_characterControllers[i]->getAction()->getCharacter()->getId() != m_playerId) {
			allCharacterAlreadyGoal &= controller->moveGoal();
			controller->setPlayerDirection(m_player_p);
		}

		// 鬯ｮ�ｯ�ｽ�ｷ�ｽ�ｽ�ｽ�ｿ鬯ｮ�｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｴ鬮｣蛹�ｽｽ�ｳ original鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｸ髯槭ｑ�ｿ�ｽ�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ�･�ｽ�ｽ郢ｽ謳ｾ�ｿ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (!m_duplicationFlag || m_characterControllers[i]->getAction()->getCharacter()->getId() != m_playerId) {
			controller->action();
		}

		// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻ�ｿｽ鬮ｮ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｯ�ｮ�ｽ�ｮ髯ｷ闌ｨ�ｽ�ｷ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｯ�ｯ�ｽ�ｨ�ｽ�ｽ�ｽ�ｾ鬮ｯ讖ｸ�ｽ�｢�ｽ�ｽ�ｽ�ｼ鬮ｫ�ｲ�ｽ�｢髯晢ｽｷ�ｽ�ｽ�ｽ�･
		penetrationCharacterAndObject(controller, m_stageObjects);
	}

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｪ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｿ�ｽ�ゑｽｧ鬩搾ｽｵ�ｽ�ｺ髯樊ｺ假ｽ托ｿｽ�ｽ�ｽ�ｹ�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｯ鬯ｩ蟷｢�ｽ�｢髫ｴ荳ｻ�ｽ隶捺ｻゑｽｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	controlObject();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｿ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ闕ｳ�ｻ�ｽ�､�ｽ�ｽ�ｽ�ｸ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｯ�ｽ�ｷ髯髮懶ｽ｣�ｽ�ｽ�ｽ�ｼ髫ｰ螟ｲ�ｽ�ｫ�ｽ�ｽ�ｽ�ｳ
	controlItem();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｫ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｡鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
	adjustBattleCamera();

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｵ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｦ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ蟷｢�ｽ�｢髫ｴ蜿門ｾ暦ｿｽ�ｽ�ｽ�ｳ�ｽ�ｽ�ｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｬ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�､鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｻ�ｽ�ｽ�ｽ�｣�ｽ�ｽ髮懶ｽ｣�ｽ�ｽ�ｽ�ｦ鬯ｯ�ｮ�ｽ�ｫ�ｽ�ｽ�ｽ�ｪ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｭ鬯ｮ�ｯ隶厄ｽｸ�ｽ�ｽ�ｽ�ｳ鬮ｯ讓奇ｽｺ蛛�ｽｽ陋ｾ鬆ｼ
	m_soundPlayer_p->setCameraX(m_camera->getX());

	// 鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�｢鬯ｩ蟷｢�ｽ�｢髫ｴ荵暦ｿｽ�ｽ�ｽ�ｽ�ｹ髫ｴ竏ｵ�ｻ�ｽ�ｱ�ｪ�ｽ�ｽ�ｽ�ｹ髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｷ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｧ鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｳ鬯ｩ謳ｾ�ｽ�ｵ�ｽ�ｽ�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｮ鬯ｮ�ｫ�ｽ�ｴ髯ｷ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｴ鬯ｮ�ｫ�ｽ�ｴ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｰ
	updateAnimation();

	return allCharacterAlreadyGoal;
}

bool World::dealBrightValue() {
	// 鬨ｾ蛹�ｽｽ�ｻ鬯ｮ�ｱ�ｽ�｢髫ｴ闃ｽ謖呻ｿｽ�ｻ�ｽ�｢髣包ｽｳ�ｽ�ｭ 驛｢�ｧ�ｽ�ｨ驛｢譎｢�ｽ�ｪ驛｢�ｧ�ｽ�｢鬩募∞�ｽ�ｻ髯ｷ蟠趣ｽｼ譚ｿ�ｰ驛｢譎丞ｹｲ�取ｨ抵ｽｹ�ｧ�ｽ�､驛｢譎｢�ｽ�､驛｢譎｢�ｽ�ｼ驛｢�ｧ�ｽ�ｽ�ｽ閾･�ｹ�ｧ隴ｴ�ｧ陷�ｽｾ
	if (m_brightValue != 255 || playerDead()) {
		m_brightValue = max(0, m_brightValue - 10);
		if (!playerDead()) { return true; }
	}
	return false;
}

// 髣費ｽｨ陞溷･�ｽｽ�ｩ�ｽ�ｱ驍ｵ�ｺ髴域喚髮ｷ驛｢�ｧ
void World::talk() {
	if (m_conversation_p != nullptr) {
		updateCamera();
		m_conversation_p->play();
		// 鬯ｮ�｣髮具ｽｻ�ｽ�ｽ�ｽ�ｨ鬮ｯ讓奇ｽｺ�ｷ�ｽ�･�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｩ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｱ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｨ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (m_conversation_p->getFinishFlag()) {
			m_conversation_p = nullptr;
		}
	}
}

// 鬯ｩ蟷｢�ｽ�｢鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ蟇よ��ｽ�ｾ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｩ蟷｢�ｽ�｢�ｽ�ｽ�ｽ�ｧ鬮ｯ�ｷ�ｽ�ｻ鬮｣魃会ｽｽ�ｨ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｵ鬩包ｽｶ闕ｳ讖ｸ�ｽ�｣�ｽ�ｺ�ｽ�ｽ�ｽ�ｽ
void World::moviePlay() {
	if (m_movie_p != nullptr) {
		m_movie_p->play();
		// 鬯ｩ蟷｢�ｽ�｢鬯ｩ蟷｢�ｽ�｢髫ｴ雜｣�ｽ�｢�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｼ鬯ｩ蟷｢�ｽ�｢髫ｴ蟇よ��ｽ�ｾ�ｽ�ｭ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ鬯ｯ�ｩ隰ｳ�ｾ�ｽ�ｽ�ｽ�ｨ鬩幢ｽ｢�ｽ�ｧ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｽ�ｺ
		if (m_movie_p->getFinishFlag()) {
			m_movie_p = nullptr;
		}
	}
}